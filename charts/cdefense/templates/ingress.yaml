{{ if .Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cdefense-ingress
  namespace: {{ .Release.Namespace | default "default"}}
  annotations:
    {{ if eq .Values.ingress.type  "alb" }}
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.aws.certificatearn }}
    alb.ingress.kubernetes.io/scheme: {{ .Values.ingress.alb.scheme | default "internal" }}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '20'
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-port: '80'
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600'
    {{ else if eq .Values.ingress.type "nginx" }}
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    # nginx.ingress.kubernetes.io/rewrite-target: /$1
    {{ else if eq .Values.ingress.type "gce"}}
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "cdefense-ip"
    {{ else if eq .Values.ingress.type "kong" }}
    kubernetes.io/ingress.class: kong 
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    certmanager.k8s.io/issuer: "letsencrypt"
    certmanager.k8s.io/acme-challenge-type: dns01
    # certmanager.k8s.io/acme-dns01-provider: route53
    {{ else }}
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    {{ end }}
spec:
  rules:
  - host: {{ .Values.hostname }}
    http:
      paths:
      - path: /auth/*
        pathType: ImplementationSpecific
        backend:
          service:
            name: keycloak
            port:
              number: 80
      - path: /cd-auth/*
        pathType: ImplementationSpecific
        backend:
          service:
            name: authservice
            port:
              number: 80
      - path: /v1/*
        pathType: ImplementationSpecific
        backend:
          service:
            name: graphql
            port:
              number: 80
      - path: /api/*
        pathType: ImplementationSpecific
        backend:
          service:
            name: api
            port:
              number: 80
      - path: /scan/*
        pathType: ImplementationSpecific
        backend:
          service:
            name: api
            port:
              number: 80
      - path: /ws/*
        pathType: ImplementationSpecific
        backend:
          service:
            name: api
            port:
              number: 80
      - path: /processAndSave
        pathType: ImplementationSpecific
        backend:
          service:
            name: api
            port:
              number: 80
      - path: /integration/*
        pathType: ImplementationSpecific
        backend:
          service:
            name: api
            port:
              number: 80
      - path: /api-v2/*
        pathType: ImplementationSpecific
        backend:
          service:
            name: newapi
            port:
              number: 80
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: web
            port:
              number: 80
  - host: {{ if .Values.uptime.hostname}}"{{.Values.uptime.hostname}}"{{- else }}"status.{{ .Values.domain }}"{{- end }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: uptime
            port:
              number: 80
  - host: {{ if .Values.recommendation.hostname }}"{{ .Values.recommendation.hostname }}"{{- else }}"recommendation.{{ .Values.domain }}"{{- end }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: recommendation
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: graphql-ingress
  namespace: {{ .Release.Namespace | default "default"}}
  annotations:
    {{ if eq .Values.ingress.type  "alb" }}
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.aws.certificatearn }}
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '20'
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-port: '80'
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600'
    {{ else if eq .Values.ingress.type "nginx" }}
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    # nginx.ingress.kubernetes.io/rewrite-target: /$1
    {{ else if eq .Values.ingress.type "gce"}}
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "cdefense-ip"
    {{ else if eq .Values.ingress.type "kong" }}
    kubernetes.io/ingress.class: kong 
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    certmanager.k8s.io/issuer: "letsencrypt"
    certmanager.k8s.io/acme-challenge-type: dns01
    # certmanager.k8s.io/acme-dns01-provider: route53
    {{ end }}
spec:
  rules:
  - host: graphql-{{ .Values.hostname }}
    http:
      paths:
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: graphql
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-ui-ingress
  namespace: {{ .Release.Namespace | default "default"}}
  annotations:
    {{ if eq .Values.ingress.type  "alb" }}
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.aws.certificatearn }}
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '20'
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-port: '80'
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600'
    {{ else if eq .Values.ingress.type "nginx" }}
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    # nginx.ingress.kubernetes.io/rewrite-target: /$1
    {{ else if eq .Values.ingress.type "gce"}}
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "cdefense-ip"
    {{ else if eq .Values.ingress.type "kong" }}
    kubernetes.io/ingress.class: kong 
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    certmanager.k8s.io/issuer: "letsencrypt"
    certmanager.k8s.io/acme-challenge-type: dns01
    # certmanager.k8s.io/acme-dns01-provider: route53
    {{ end }}
spec:
  rules:
  - host: admin-{{ .Values.hostname }}
    http:
      paths:
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: adminbackend
            port:
              number: 80
  - host: adminui-{{ .Values.hostname }}
    http:
      paths:
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: adminui
            port:
              number: 80
{{ end }}