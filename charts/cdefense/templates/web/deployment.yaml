---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: {{ .Release.Namespace | default "default"}}
spec:
  selector:
    matchLabels:
      app: web
  replicas: 1
  template:
    metadata:
      labels:
        app: web
      annotations:
        diun.enable: "true"
    spec:
      {{- if .Values.web.nodeSelector }}
      nodeSelector:
        label: {{ .Values.web.nodeSelector }}
      {{- end }}
      {{- if .Values.web.tolerations }}
      tolerations:
{{ toYaml .Values.web.tolerations | indent 8 }}
      {{- end }}
      imagePullSecrets:
      - name: regcred
      containers:
      - name: web
        image: {{ .Values.web.image }}:{{ .Values.version }}
        imagePullPolicy: Always
        args:
        - ./run.sh
        env:
        - name: NEW_API_HOST
          valueFrom:
            configMapKeyRef:
                name: cdefense-config
                key: CLOUDDEFENSE_WEBCONSOLE_API_ENDPOINT
        - name: API_ENDPOINT
          valueFrom:
            configMapKeyRef:
                name: cdefense-config
                key: CLOUDDEFENSE_WEBCONSOLE_API_ENDPOINT
        - name: AUTH_ENDPOINT
          valueFrom:
            configMapKeyRef:
                name: cdefense-config
                key: CLOUDDEFENSE_WEBCONSOLE_AUTH_ENDPOINT
        - name: GRAPHQL_ENDPOINT
          valueFrom:
            configMapKeyRef:
                name: cdefense-config
                key: CLOUDDEFENSE_WEBCONSOLE_GRAPHQL_ENDPOINT
        - name: AUTH_STAGE
          valueFrom:
            configMapKeyRef:
                name: cdefense-config
                key: CLOUDDEFENSE_WEBCONSOLE_AUTH_STAGE
        - name: ONPREM_ENABLED
          valueFrom:
            configMapKeyRef:
                name: cdefense-config
                key: CLOUDDEFENSE_WEBCONSOLE_ONPREM_ENABLED
        - name: CUSTOM_VENDOR
          valueFrom:
            configMapKeyRef:
                name: cdefense-config
                key: CUSTOM_VENDOR
        livenessProbe:
          exec:
            command:
            - nc
            - -z
            - 127.0.0.1
            - "80"
          periodSeconds: 30
          timeoutSeconds: 3
        readinessProbe:
          exec:
            command:
            - nc
            - -z
            - 127.0.0.1
            - "80"
          periodSeconds: 30
          timeoutSeconds: 3
        ports:
        - containerPort: 80
    #    resources:
    #      requests:
    #        memory: "0.5G"
    #        cpu: "250m"
    #      limits:
    #        memory: "0.5G"
      initContainers:
      # - name: check-graphql
      #   image: radial/busyboxplus:curl
      #   imagePullPolicy: IfNotPresent
      #   command:
      #   - sh
      #   - -c
      #   - until $(curl --connect-timeout 2 --output /dev/null --silent --fail http://graphql/v1/version);  do
      #     echo waiting for graphql; sleep 10; done; echo connection to graphql ok
      #   resources: {}
      #   terminationMessagePath: /dev/termination-log
      #   terminationMessagePolicy: File
    #   - name: check-api
    #     image: radial/busyboxplus:curl
    #     imagePullPolicy: IfNotPresent
    #     command:
    #     - sh
    #     - -c
    #     - until $(curl --connect-timeout 2 --output /dev/null --silent --fail http://api/scan/container);  do
    #       echo waiting for api; sleep 10; done; echo connection to api ok
    #     resources: {}
    #     terminationMessagePath: /dev/termination-log
    #     terminationMessagePolicy: File
