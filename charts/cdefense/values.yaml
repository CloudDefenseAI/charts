version: "release-4.9.1"
domain: clouddefenseai.com
hostname: cdefense.clouddefenseai.com

cluster:
  type: eks
  region: us-west-2
  zones: |
    [ 'us-west-2a', 'us-west-2b', 'us-west-2c' ]

ingress:
  enabled: true
  type: "alb"
  alb:
    scheme: internet-facing
  nginx:
    class: ""
    certificate: ""

aws:
  certificatearn: ""

sentry:
  env: prod

uptime:
  nodeSelector: external
  tolerations: []
  enabled: false

db:
  nodeSelector: cdefense
  tolerations: []
  type: "internal"
  replicas: 1
  image: postgres
  version: "14"
  user: "postgres"
  name: "cdefense"
  external:
    host:
      name: ""
    secondary:
      host:
        name: ""
  service:
    type: NodePort
    ports:
    - port: 5432
      targetPort: 5432
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

keycloak:
  nodeSelector: cdefense
  tolerations: []
  replicas: 1
  image: quay.io/keycloak/keycloak
  version: "19.0.3"
  user: authadmin
  service:
    type: NodePort
    ports:
    - name: http
      port: 80
      targetPort: 8080
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

authservice:
  nodeSelector: cdefense
  tolerations: []
  replicas: 1
  image: cdefense/auth-service
  environment: dev
  realm: cdefense
  service:
    type: NodePort
    ports:
    - name: http
      port: 80
      targetPort: 8080

api:
  nodeSelector: cdefense
  tolerations: []
  image: cdefense/scan-api
  service:
    type: NodePort
    ports:
    - name: http
      port: 80
      targetPort: 8080
  apiscan:
    image: cdefense/api-v2
  dast:
    image: cdefense/dast-v2
    region: us-west-2
    bucket: cdefense-dast-curl
  fullscan:
    image: cdefense/fullscan
  data:
    region: us-east-1
    bucket: cdefense-vulnerability-data-new
    endpoint: https://cdefense-vulnerability-data-new.s3.us-east-1.amazonaws.com
  vuln:
    host: "https://vuln-console.clouddefenseai.com"
  logs:
    region: us-west-2
    bucket: cdefense-cli-logs
  job:
    resource:
      memory:
        request: "3Gi"
        limit: "4Gi"
      cpu:
        request: "2000m"
    nodeSelector:
      key: label
      value: job

data:
  nodeSelector: cdefense
  tolerations: []
  image: cdefense/scan-data

newapi:
  nodeSelector: cdefense
  tolerations: []
  replicas: 1
  image: cdefense/new-api
  version: "latest"
  service:
    type: NodePort
    ports:
    - name: http
      port: 80
      targetPort: 8080
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

alertservice:
  nodeSelector: cdefense
  tolerations: []
  replicas: 1
  image: cdefense/alert-service
  version: "latest"
  service:
    type: NodePort
    ports:
    - name: http
      port: 80
      targetPort: 8080
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

web:
  nodeSelector: cdefense
  tolerations: []
  replicas: 1
  image: cdefense/webconsole
  service:
    type: NodePort
    ports:
    - name: http
      port: 80
      targetPort: 80

ai:
  enabled: true
  nodeSelector: cdefense
  tolerations: []
  replicas: 1
  image: cdefense/ai-service
  version: "latest"
  resources:
    requests:
      memory: "1300Mi"
      cpu: "350m"
    limits:
      memory: "1640Mi"
  #     cpu: "500m"
  service:
    type: NodePort
    ports:
      - name: http
        port: 80
        targetPort: 8084
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
